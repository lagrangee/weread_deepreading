class FloatingMenu{static#instance=null;static#providers={wenxin:"文心一言",qianwen:"通义千问",doubao:"豆包",deepseek:"DeepSeek"};static#providerList=Object.keys(FloatingMenu.#providers);#currentText="";#bookName="";#authorName="";#isDragging=false;#isResizing=false;#isShowing=false;#isInlineMode=null;#resizeDirection=null;#startX=0;#startY=0;#elementX=0;#elementY=0;#elementWidth=0;#elementHeight=0;#resizeTimeout=null;#messageTimeout=null;#moveThreshold=5;#hasMoved=false;#wrapperElement=null;#contentElement=null;#helpElement=null;#pinElement=null;static getProviderList(){return FloatingMenu.#providerList}static getProviderName(providerId){return FloatingMenu.#providers[providerId]||providerId}static getInstance(){return FloatingMenu.#instance}static async create(bookName,authorName){if(!FloatingMenu.#instance){try{const menuUrl=chrome.runtime.getURL("src/content/floating-menu.html");const response=await fetch(menuUrl);const html=await response.text();const parser=new DOMParser;const doc=parser.parseFromString(html,"text/html");const menu=doc.body.firstElementChild;document.body.appendChild(menu);FloatingMenu.#instance=new FloatingMenu(menu,bookName,authorName);console.log(`${window.CONFIG.LOG_PREFIX} 浮动菜单创建成功`)}catch(error){console.error(`${window.CONFIG.LOG_PREFIX} 浮动菜单创建失败:`,error);throw new Error(`浮动菜单创建失败: ${error.message}`)}}return FloatingMenu.#instance}constructor(element,bookName,authorName){if(FloatingMenu.#instance){return FloatingMenu.#instance}this.#wrapperElement=element;this.#contentElement=element.children[0];this.#helpElement=element.children[1];this.#pinElement=element.children[2];this.#bookName=bookName;this.#authorName=authorName;this.#initialize()}#initialize(){this.#initLocalSettings();this.#initDrag();this.#initPinDrag();this.#initShortcuts();this.#initMarkdown();this.#initChat();this.#initResizeHandler();this.#bindEvents();this.#interceptEvents();this.setInitialPosition();this.#initHelpModal()}#initPinDrag(){this.#pinElement.addEventListener("mousedown",this.#handlePinDragStart)}#handlePinDragStart=e=>{document.addEventListener("mousemove",this.#handlePinDragMove);document.addEventListener("mouseup",this.#handlePinDragEnd);this.#isDragging=true;this.#hasMoved=false;const rect=this.#pinElement.getBoundingClientRect();this.#startX=e.clientX;this.#startY=e.clientY;this.#elementX=rect.left;this.#elementY=rect.top;this.#pinElement.classList.add("dragging")};#handlePinDragMove=e=>{if(!this.#isDragging)return;const deltaX=e.clientX-this.#startX;const deltaY=e.clientY-this.#startY;if(!this.#hasMoved&&(Math.abs(deltaX)>this.#moveThreshold||Math.abs(deltaY)>this.#moveThreshold)){this.#hasMoved=true}if(!this.#hasMoved)return;const vw=Math.max(document.documentElement.clientWidth||0,window.innerWidth||0);const vh=Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);const rect=this.#pinElement.getBoundingClientRect();const right=vw-(this.#elementX+deltaX+rect.width);const bottom=vh-(this.#elementY+deltaY+rect.height);const minRight=0;const minBottom=0;const maxRight=vw-rect.width;const maxBottom=vh-rect.height;this.#pinElement.style.right=`${Math.min(Math.max(right,minRight),maxRight)}px`;this.#pinElement.style.bottom=`${Math.min(Math.max(bottom,minBottom),maxBottom)}px`;this.#pinElement.style.left="auto";this.#pinElement.style.top="auto"};#handlePinDragEnd=e=>{if(!this.#isDragging)return;if(this.#hasMoved){e.preventDefault();e.stopPropagation();this.savePinPosition()}else{this.show({})}this.#isDragging=false;this.#hasMoved=false;this.#pinElement.classList.remove("dragging");document.removeEventListener("mousemove",this.#handlePinDragMove);document.removeEventListener("mouseup",this.#handlePinDragEnd)};savePinPosition(){const rect=this.#pinElement.getBoundingClientRect();const vw=Math.max(document.documentElement.clientWidth||0,window.innerWidth||0);const vh=Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);this.#saveSettings({pinPosition:{right:vw-rect.right,bottom:vh-rect.bottom}})}loadPinPosition(){const settings=this.#loadSettings();if(settings.pinPosition){this.#pinElement.style.right=`${settings.pinPosition.right}px`;this.#pinElement.style.bottom=`${settings.pinPosition.bottom}px`;this.#pinElement.style.left="auto";this.#pinElement.style.top="auto"}}#initLocalSettings(){const settings=this.#loadSettings();if(settings.isDarkMode){this.#contentElement.classList.add("dark-mode")}this.loadPinPosition();this.loadFontSettings()}setInitialPosition(){const settings=this.#loadSettings();let mode=settings.isInlineMode?"inline":"floating";if(settings.isLastTimeShowing){this.show({mode:mode})}}#initDrag(){const bar=this.#contentElement.querySelector(".bar");bar.addEventListener("mousedown",this.#handleDragStart)}#handleDragStart=e=>{if(e.target.closest(".menu-close"))return;document.addEventListener("mousemove",this.#handleDragMove);document.addEventListener("mouseup",this.#handleDragEnd);this.#isDragging=true;const rect=this.#contentElement.getBoundingClientRect();this.#startX=e.clientX;this.#startY=e.clientY;this.#elementX=rect.left;this.#elementY=rect.top;this.#contentElement.style.cursor="grabbing"};#handleDragMove=e=>{if(!this.#isDragging)return;const deltaX=e.clientX-this.#startX;const deltaY=e.clientY-this.#startY;let newX=this.#elementX+deltaX;let newY=this.#elementY+deltaY;const vw=Math.max(document.documentElement.clientWidth||0,window.innerWidth||0);const vh=Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);const rect=this.#contentElement.getBoundingClientRect();newX=Math.min(Math.max(newX,0),vw-rect.width);newY=Math.min(Math.max(newY,0),vh-rect.height);this.#contentElement.style.left=`${newX}px`;this.#contentElement.style.top=`${newY}px`};#handleDragEnd=()=>{if(!this.#isDragging)return;this.#isDragging=false;this.#contentElement.style.cursor="";document.removeEventListener("mousemove",this.#handleDragMove);document.removeEventListener("mouseup",this.#handleDragEnd);this.savePositonSettings()};#initResizeHandler(){const resizeHandleSE=document.createElement("div");resizeHandleSE.className="resize-handle se";this.#contentElement.appendChild(resizeHandleSE);const resizeHandleSW=document.createElement("div");resizeHandleSW.className="resize-handle sw";this.#contentElement.appendChild(resizeHandleSW);const resizeHandleE=document.createElement("div");resizeHandleE.className="resize-handle e";this.#contentElement.appendChild(resizeHandleE);const resizeHandleW=document.createElement("div");resizeHandleW.className="resize-handle w";this.#contentElement.appendChild(resizeHandleW);[resizeHandleSE,resizeHandleSW,resizeHandleE,resizeHandleW].forEach((handle=>{handle.addEventListener("mousedown",this.#handleResizeStart)}));window.addEventListener("resize",(()=>{if(this.#resizeTimeout){clearTimeout(this.#resizeTimeout)}this.#resizeTimeout=setTimeout((()=>{const rect=this.#contentElement.getBoundingClientRect();const vw=Math.max(document.documentElement.clientWidth||0,window.innerWidth||0);const vh=Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);const x=Math.min(rect.left,vw-rect.width);const y=Math.min(rect.top,vh-rect.height);this.#contentElement.style.left=`${Math.max(0,x)}px`;this.#contentElement.style.top=`${Math.max(0,y)}px`}),100)}))}#handleResizeStart=e=>{e.stopPropagation();document.addEventListener("mousemove",this.#handleResizeMove);document.addEventListener("mouseup",this.#handleResizeEnd);this.#isResizing=true;this.#resizeDirection=e.target.classList.contains("se")?"se":e.target.classList.contains("sw")?"sw":e.target.classList.contains("e")?"e":"w";this.#startX=e.clientX;this.#startY=e.clientY;this.#elementWidth=this.#contentElement.offsetWidth;this.#elementHeight=this.#contentElement.offsetHeight;this.#elementX=this.#contentElement.offsetLeft};#handleResizeMove=e=>{if(!this.#isResizing)return;const dx=e.clientX-this.#startX;const dy=e.clientY-this.#startY;const vw=Math.max(document.documentElement.clientWidth||0,window.innerWidth||0);const vh=Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);switch(this.#resizeDirection){case"se":const seWidth=Math.min(this.#elementWidth+dx,vw-this.#elementX);const seHeight=Math.min(this.#elementHeight+dy,vh-this.#contentElement.offsetTop);this.#contentElement.style.width=`${seWidth}px`;this.#contentElement.style.height=`${seHeight}px`;break;case"sw":const swWidth=Math.min(this.#elementWidth-dx,this.#elementX+this.#elementWidth);const swHeight=Math.min(this.#elementHeight+dy,vh-this.#contentElement.offsetTop);this.#contentElement.style.left=`${this.#elementX-swWidth+this.#elementWidth}px`;this.#contentElement.style.width=`${swWidth}px`;this.#contentElement.style.height=`${swHeight}px`;break;case"e":const eWidth=Math.min(this.#elementWidth+dx,vw-this.#elementX);this.#contentElement.style.width=`${eWidth}px`;break;case"w":const wWidth=Math.min(this.#elementWidth-dx,this.#elementX+this.#elementWidth);this.#contentElement.style.left=`${this.#elementX-wWidth+this.#elementWidth}px`;this.#contentElement.style.width=`${wWidth}px`;break}};#handleResizeEnd=()=>{if(!this.#isResizing)return;this.#isResizing=false;document.removeEventListener("mousemove",this.#handleResizeMove);document.removeEventListener("mouseup",this.#handleResizeEnd);if(this.#isInlineMode)this.resizeBodyWidth();this.savePositonSettings()};#initShortcuts(){document.addEventListener("keydown",(e=>{if(!this.#isShowing)return;if(e.target.matches("input, textarea"))return;switch(e.key.toLowerCase()){case"a":if(e.key==="a"){this.#contentElement.querySelector(".menu-button.font-adjust.decrease").click()}else{this.#contentElement.querySelector(".menu-button.font-adjust.increase").click()}break;case"d":this.#contentElement.querySelector(".menu-button.theme-toggle").click();break;case"e":this.#contentElement.querySelector(".menu-button.explain").click();break;case"x":this.#contentElement.querySelector(".menu-button.digest").click();break;case"m":this.#contentElement.querySelector(".menu-button.analyze").click();break;case"t":this.#contentElement.querySelector(".menu-button.toggle-mode").click();break;case"?":this.#contentElement.querySelector(".menu-button.help").click();break;case"escape":const helpModal=this.#helpElement;if(!helpModal.classList.contains("hide")){helpModal.classList.add("hide")}else if(!this.#isInlineMode){this.hide()}break}}))}#initMarkdown(){marked.setOptions({renderer:new marked.Renderer,highlight:function(code,lang){return code},pedantic:false,gfm:true,breaks:true,sanitize:false,smartLists:true,smartypants:false,xhtml:false})}#initChat(){const input=this.#contentElement.querySelector(".chat-input");const sendButton=this.#contentElement.querySelector(".menu-button.send");const sendMessage=async()=>{const text=input.value.trim();if(!text)return;input.value="";input.style.height="auto";const context=[];this.#contentElement.querySelectorAll(".chat-container .message").forEach((element=>{if(element.classList.contains("user")){context.push(`我问：${element.innerHTML}`)}if(element.classList.contains("ai")){context.push(`你的回答：${element.innerHTML}`)}}));this.appendMessage(text,"user");this.showLoading();try{const result=await AIService.getInstance().chat(text,this.#authorName,this.#bookName,context.join("\n").slice(-CONFIG.MAX_CONTEXT_LENGTH));this.hideLoading();this.appendMessage(result,"ai")}catch(error){console.error("发送消息失败:",error);this.showError("发送消息失败",error)}};sendButton.addEventListener("click",sendMessage);input.addEventListener("keydown",(e=>{if(e.key==="Enter"&&!e.shiftKey){e.preventDefault();sendMessage()}}));input.addEventListener("input",(()=>{input.style.height="auto";input.style.height=`${Math.min(input.scrollHeight,120)}px`}))}appendMessage(content,type){const container=this.#contentElement.querySelector(".chat-container");const message=document.createElement("div");message.className=`message ${type}`;message.innerHTML=type==="ai"?marked.parse(content):content;container.appendChild(message);container.scrollTop=container.scrollHeight}#interceptEvents(){this.#wrapperElement.addEventListener("selectstart",(e=>{e.stopPropagation()}));this.#wrapperElement.addEventListener("contextmenu",(e=>{e.stopPropagation()}));this.#wrapperElement.addEventListener("keydown",(e=>{if(e.ctrlKey&&(e.key==="c"||e.key==="a")){e.stopPropagation()}}));document.addEventListener("copy",(function(e){const selection=window.getSelection();const selectedText=selection.toString();if(selectedText&&e.target.closest(".floating-menu")){e.preventDefault();e.clipboardData.setData("text/plain",selectedText);e.stopPropagation()}}),true)}#bindEvents(){const closeButton=this.#contentElement.querySelector(".menu-close");closeButton.addEventListener("click",(()=>this.hide()));const toggleButton=this.#contentElement.querySelector(".menu-button.toggle-mode");toggleButton.addEventListener("click",(()=>{if(this.#isInlineMode){this.switchToFloating()}else{this.switchToInline()}}));const explainButton=this.#contentElement.querySelector(".menu-button.explain");const digestButton=this.#contentElement.querySelector(".menu-button.digest");const analyzeButton=this.#contentElement.querySelector(".menu-button.analyze");explainButton.addEventListener("click",(async()=>{try{this.showLoading();explainButton.classList.add("loading");explainButton.disabled=true;const result=await AIService.getInstance().explain(this.#currentText,this.#authorName,this.#bookName);this.showResult({content:result})}catch(error){console.error("解释失败:",error);this.showError("解释失败",error)}finally{explainButton.classList.remove("loading");explainButton.disabled=false}}));digestButton.addEventListener("click",(async()=>{try{this.showLoading();digestButton.classList.add("loading");digestButton.disabled=true;const result=await AIService.getInstance().digest(this.#currentText,this.#authorName,this.#bookName);this.showResult({content:result})}catch(error){console.error("消化失败:",error);this.showError("消化失败",error)}finally{digestButton.classList.remove("loading");digestButton.disabled=false}}));analyzeButton.addEventListener("click",(async()=>{try{this.showLoading();analyzeButton.classList.add("loading");analyzeButton.disabled=true;const result=await AIService.getInstance().analyze(this.#currentText,this.#authorName,this.#bookName);this.showResult({content:result})}catch(error){console.error("兼听失败:",error);this.showError("兼听失败",error)}finally{analyzeButton.classList.remove("loading");analyzeButton.disabled=false}}));const increaseButton=this.#contentElement.querySelector(".menu-button.font-adjust.increase");const decreaseButton=this.#contentElement.querySelector(".menu-button.font-adjust.decrease");increaseButton.addEventListener("click",(()=>{let fontSize=parseFloat(this.#wrapperElement.style.fontSize);if(fontSize<24){fontSize+=1;this.#wrapperElement.style.fontSize=fontSize+"px";this.saveFontSettings(fontSize)}}));decreaseButton.addEventListener("click",(()=>{let fontSize=parseFloat(this.#wrapperElement.style.fontSize);if(fontSize>12){fontSize-=1;this.#wrapperElement.style.fontSize=fontSize+"px";this.saveFontSettings(fontSize)}}));const themeToggle=this.#contentElement.querySelector(".menu-button.theme-toggle");themeToggle.addEventListener("click",(()=>{this.#wrapperElement.classList.toggle("dark-mode");this.#saveSettings({isDarkMode:this.#wrapperElement.classList.contains("dark-mode")})}));this.helpButton=this.#contentElement.querySelector(".menu-button.help");this.helpModal=this.#helpElement;this.helpCloseButton=this.helpModal.querySelector(".help-close");this.#initModelConfig();const showHelp=()=>{this.helpModal.classList.remove("hide");this.#loadModelConfig()};const hideHelp=()=>{this.helpModal.classList.add("hide")};this.helpButton.addEventListener("click",showHelp);this.helpCloseButton.addEventListener("click",hideHelp);this.helpModal.addEventListener("click",(e=>{if(e.target===this.helpModal){hideHelp()}}))}show(options){if(options&&options.text)this.#currentText=options.text;const preview=this.#contentElement.querySelector(".text-preview");preview.textContent=this.#currentText;const bookTitle=this.#contentElement.querySelector(".book-title");const bookAuthor=this.#contentElement.querySelector(".book-author");bookTitle.textContent=this.#bookName;bookAuthor.textContent=this.#authorName;this.#wrapperElement.classList.remove("hide");this.#wrapperElement.classList.add("show");let mode;if(options.mode){mode=options.mode}else{const settings=this.loadModeSettings();mode=settings.isInlineMode?"inline":"floating"}if(mode==="inline"){this.switchToInline({resize:!this.#isShowing})}else{this.switchToFloating({resize:false})}this.#isShowing=true}showLoading(){let loadingDiv=this.#contentElement.querySelector(".message.loading");if(loadingDiv)loadingDiv.remove();loadingDiv=document.createElement("div");loadingDiv.className="loading message";loadingDiv.textContent="加载中...";this.#contentElement.querySelector(".chat-container").appendChild(loadingDiv)}hideLoading(){let loadingDiv=this.#contentElement.querySelector(".message.loading");if(loadingDiv)loadingDiv.remove()}showResult(result){if(!result||!result.content){this.showError("处理失败");return}this.hideLoading();this.appendMessage(result.content,"ai")}showError(tip,error=new Error){const errorDiv=document.createElement("div");errorDiv.className="error message";errorDiv.textContent=`${tip} ${error.message}`;this.hideLoading();this.#contentElement.querySelector(".chat-container").appendChild(errorDiv);setTimeout((()=>{errorDiv.remove()}),5e3)}hide(options){const defaults={needSaveSettings:true};const settings=Object.assign({},defaults,options);this.#isShowing=false;this.#wrapperElement.classList.remove("show");this.#wrapperElement.classList.add("hide");if(settings.needSaveSettings)this.saveModeSettings({closed:true,isInlineMode:this.#isInlineMode});if(this.#isInlineMode)this.resetBodyWidth()}switchToFloating(options){const defaults={resize:true};const settings=Object.assign({},defaults,options);this.#isInlineMode=false;this.#contentElement.classList.remove("inline");this.#contentElement.classList.add("floating");if(settings.resize)this.resetBodyWidth();this.loadModeSettings("floating");const toggleButton=this.#contentElement.querySelector(".menu-button.toggle-mode");const toggleText=toggleButton.querySelector(".toggle-text");toggleText.textContent="内嵌模式(T)";this.saveModeSettings({isInlineMode:false})}switchToInline(options){const defaults={resize:true};const settings=Object.assign({},defaults,options);this.#isInlineMode=true;this.#contentElement.classList.remove("floating");this.#contentElement.classList.add("inline");this.loadModeSettings("inline");if(settings.resize)this.resizeBodyWidth();const toggleButton=this.#contentElement.querySelector(".menu-button.toggle-mode");const toggleText=toggleButton.querySelector(".toggle-text");toggleText.textContent="悬浮模式(T)";this.saveModeSettings({isInlineMode:true})}resizeBodyWidth(){document.body.style.width=window.innerWidth-this.#contentElement.offsetWidth+"px";window.dispatchEvent(new Event("resize"))}resetBodyWidth(){document.body.style.width="100vw";window.dispatchEvent(new Event("resize"))}saveFontSettings(fontSize){this.#saveSettings({fontSize:fontSize})}loadFontSettings(){this.#wrapperElement.style.fontSize=this.#loadSettings().fontSize+"px"}saveModeSettings(options){const defaults={closed:false,isInlineMode:true};let settings=Object.assign({},defaults,options);this.#saveSettings({isInlineMode:settings.isInlineMode,isLastTimeShowing:!settings.closed})}savePositonSettings(){let settings={};if(this.#isInlineMode){settings.inlineMenuWidth=this.#contentElement.offsetWidth;settings.inlineMenuHeight=this.#contentElement.offsetHeight;settings.inlineMenuTop=this.#contentElement.offsetTop}else{settings.floatingMenuWidth=this.#contentElement.offsetWidth;settings.floatingMenuHeight=this.#contentElement.offsetHeight;settings.floatingMenuTop=this.#contentElement.offsetTop;settings.floatingMenuLeft=this.#contentElement.offsetLeft}this.#saveSettings(settings)}loadModeSettings(mode="inline"){const settings=this.#loadSettings();if(mode==="inline"){if(settings.inlineMenuWidth){this.#contentElement.style.width=settings.inlineMenuWidth+"px";this.#contentElement.style.height=settings.inlineMenuHeight+"px";this.#contentElement.style.top=settings.inlineMenuTop+"px";this.#contentElement.style.left="auto"}}else{if(settings.floatingMenuWidth){this.#contentElement.style.width=settings.floatingMenuWidth+"px";this.#contentElement.style.height=settings.floatingMenuHeight+"px";this.#contentElement.style.top=settings.floatingMenuTop+"px";this.#contentElement.style.left=settings.floatingMenuLeft+"px"}}return settings}#loadSettings(){let settings=JSON.parse(localStorage.getItem(window.CONFIG.LOCAL_STORAGE_KEY))||{isInlineMode:true,isLastTimeShowing:true,fontSize:16,isDarkMode:false};return settings}#saveSettings(settings){let savedSettings=this.#loadSettings();Object.assign(savedSettings,settings);localStorage.setItem(window.CONFIG.LOCAL_STORAGE_KEY,JSON.stringify(savedSettings))}updateProviderDisplay(provider){this.#contentElement.querySelector(".bar .model").textContent=`(${this.getProviderName(provider)})`}#initHelpModal(){this.#generateProviderElements();this.#initModelConfig()}#generateProviderElements(){const selectElement=this.#helpElement.querySelector("#modalCurrentProvider");selectElement.innerHTML=FloatingMenu.#providerList.map((provider=>`<option value="${provider}">${FloatingMenu.#providers[provider]}</option>`)).join("");const apiKeysContainer=this.#helpElement.querySelector(".api-keys");apiKeysContainer.innerHTML=FloatingMenu.#providerList.map((provider=>{const providerName=FloatingMenu.#providers[provider];const capitalizedProvider=provider.charAt(0).toUpperCase()+provider.slice(1);return`\n          <div class="api-key-group">\n            <label for="modal${capitalizedProvider}Key">${providerName} API Key</label>\n            <div class="input-group">\n              <input type="text" \n                     class="api-key-input"\n                     id="modal${capitalizedProvider}Key" \n                     placeholder="输入 API Key"\n                     autocomplete="off"\n                     data-lpignore="truespacebetwe\n                     data-form-type="other">\n              <button class="test-btn" data-provider="${provider}">测试</button>\n            </div>\n          </div>\n        `})).join("")}#initModelConfig(){const modalnurrentProvider=this.#helpElement.querySelector("#modalCurrentProvider");const modalSaveConfig=this.#helpElement.querySelector("#modalSaveConfig");const modalStatusMsg=this.#helpElement.querySelector("#modalStatusMsg");this.#helpElement.querySelectorAll(".test-btn").forEach((btn=>{btn.addEventListener("click",(async e=>{const provider=e.target.dataset.provider;const key=this.#helpElement.querySelector(`#modal${provider.charAt(0).toUpperCase()+provider.slice(1)}Key`).value;await this.#testApiKey(provider,key,modalStatusMsg)}))}));modalSaveConfig.addEventListener("click",(async()=>{await this.#saveModelConfig(modalnurrentProvider,modalStatusMsg)}))}async#loadModelConfig(){try{const config=await chrome.storage.sync.get(["currentProvider","apiKeys"]);const modalCurrentProvider=this.#helpElement.querySelector("#modalCurrentProvider");if(config.currentProvider){modalCurrentProvider.value=config.currentProvider}if(config.apiKeys){Object.entries(config.apiKeys).forEach((([provider,key])=>{const input=this.#helpElement.querySelector(`#modal${provider.charAt(0).toUpperCase()+provider.slice(1)}Key`);if(input){input.value=key}}))}}catch(error){this.#showModalStatus("加载配置失败："+error.message,"error")}}async#saveModelConfig(modalCurrentProvider,modalStatusMsg){try{const currentProvider=modalCurrentProvider.value;const apiKeys={};FloatingMenu.#providerList.forEach((provider=>{const key=this.#helpElement.querySelector(`#modal${provider.charAt(0).toUpperCase()+provider.slice(1)}Key`).value.trim();if(key){apiKeys[provider]=key}}));if(!apiKeys[currentProvider]){throw new Error(`请先设置 ${this.getProviderName(currentProvider)} 的 API Key`)}const settings={currentProvider:currentProvider,apiKeys:apiKeys};await chrome.storage.sync.set(settings);const response=await chrome.runtime.sendMessage({type:"UPDATE_SETTINGS",data:settings});if(!response.success){throw new Error(response.error?.message||"更新设置失败")}this.#showModalStatus("设置已保存","success")}catch(error){console.error("保存设置失败:",error);this.#showModalStatus(error.message||"保存设置失败","error")}}async#testApiKey(provider,key,modalStatusMsg){if(!key){this.#showModalStatus(`请输入 ${this.getProviderName(provider)} 的 API Key`,"error");return}try{const testBtn=this.#helpElement.querySelector(`[data-provider="${provider}"]`);const originalText=testBtn.textContent;testBtn.textContent="测试中...";testBtn.disabled=true;const response=await AIService.getInstance().test(provider,key);if(response.success){this.#showModalStatus(`${this.getProviderName(provider)} API Key 测试成功`,"success")}else{console.log("test api key response: ",response);this.#showModalStatus(`${this.getProviderName(provider)} API Key 测试失败: ${response.error.message}`,"error")}testBtn.textContent=originalText;testBtn.disabled=false}catch(error){this.#showModalStatus(`${error.message}`,"error")}}#showModalStatus(message,type){const statusEl=this.#helpElement.querySelector("#modalStatusMsg");statusEl.textContent=message;statusEl.classList.remove("error","success");statusEl.classList.add(type);if(type==="success"){setTimeout((()=>{if(statusEl.textContent===message){statusEl.textContent="";statusEl.classList.remove("success")}}),3e3)}}getProviderName(provider){return FloatingMenu.#providers[provider]||provider}}window.FloatingMenu=FloatingMenu;