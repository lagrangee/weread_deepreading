import{AIService}from"../ai/service.js";import{CONFIG}from"../utils/config.esm.js";chrome.runtime.onMessage.addListener(((request,sender,sendResponse)=>{if(request.type==="UPDATE_SETTINGS"){try{chrome.tabs.query({active:true,currentWindow:true},(tabs=>{for(const tab of tabs){try{chrome.tabs.sendMessage(tab.id,{type:"UPDATE_SETTINGS",settings:request.data});console.log(`${CONFIG.LOG_PREFIX} AI 设置更新已发送到标签页 ${tab.id}`)}catch(err){}}}));sendResponse({success:true})}catch(error){console.error("更新设置失败:",error);sendResponse({success:false,error:{message:error.message,type:error.type}})}return true}if(request.type==="AI_CHAT"){handleAIChat(request.data).then((result=>sendResponse({result:result}))).catch((error=>sendResponse({error:{message:error.message,type:error.type}})));return true}if(request.type==="TEST_API_KEY"){testApiKey(request.provider,request.key).then((result=>sendResponse(result))).catch((error=>sendResponse({success:false,error:{message:error.message,type:error.type}})));return true}}));async function handleAIChat({provider:provider,systemPrompt:systemPrompt,userPrompt:userPrompt}){try{const{apiKeys:apiKeys={}}=await chrome.storage.sync.get("apiKeys");const apiKey=apiKeys[provider];if(!apiKey){throw new Error(`请先配置 ${CONFIG.PROVIDERS[provider]} 的 API Key`)}const config=CONFIG.API_ENDPOINTS[provider];const headers={"Content-Type":"application/json",Authorization:`Bearer ${apiKey}`};const response=await fetch(config.url,{method:"POST",headers:headers,body:JSON.stringify({model:config.model,messages:[{role:"system",content:systemPrompt},{role:"user",content:userPrompt}]})});if(!response.ok){const errorText=await response.text();throw new Error(`API 请求失败: ${response.status} - ${JSON.parse(errorText).error.message}`)}const data=await response.json();switch(provider){case"wenxin":case"qianwen":case"deepseek":case"doubao":return data.choices[0].message.content;default:throw new Error("未知的提供商")}}catch(error){console.error("AI 请求错误:",error);throw error}}async function testApiKey(provider,key){try{const config=CONFIG.API_ENDPOINTS[provider];const headers={"Content-Type":"application/json",Authorization:`Bearer ${key}`};const response=await fetch(config.url,{method:"POST",headers:headers,body:JSON.stringify({model:config.model,messages:[{role:"user",content:"测试消息"}]})});if(!response.ok){const errorText=await response.text();console.log("test api key response: ",response,errorText);throw new Error(`${response.status} - ${JSON.parse(errorText).error.message}`)}return{success:true}}catch(error){throw error}}